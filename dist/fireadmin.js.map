{"version":3,"sources":["fireadmin.js"],"names":[],"mappings":"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","file":"fireadmin.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash')) :\n\ttypeof define === 'function' && define.amd ? define(['lodash'], factory) :\n\tglobal.Fireadmin = factory(global._);\n}(this, function (_) { 'use strict';\n\n\t_ = 'default' in _ ? _['default'] : _;\n\n\tlet config = {\n\t};\n\n\t//Set default log level to debug\n\tlet logLevel = 'debug';\n\t//Set log level from config\n\tif (config.logLevel) {\n\t\tlogLevel = config.logLevel;\n\t}\n\n\tlet logger = {\n\t\tlog(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\trunConsoleMethod('log', msgArgs);\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('log', msgArgs);\n\t\t\t}\n\t\t},\n\t\tinfo(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\trunConsoleMethod('info', msgArgs);\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('info', msgArgs);\n\t\t\t}\n\t\t},\n\t\twarn(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\trunConsoleMethod('warn', msgArgs);\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('warn', msgArgs);\n\t\t\t}\n\t\t},\n\t\tdebug(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\t// runConsoleMethod('debug', msgArgs);\n\t\t\t\t//Do not display console debugs in production\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('debug', msgArgs);\n\t\t\t}\n\t\t},\n\t\terror(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\t//TODO: Log to external logger\n\t\t\t\trunConsoleMethod('error', msgArgs);\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('error', msgArgs);\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction runConsoleMethod(methodName, methodData) {\n\t\t//Safley run console methods or use console log\n\t\tif (methodName && console[methodName]) {\n\t\t\treturn console[methodName].apply(console, methodData);\n\t\t} else {\n\t\t\treturn console.log.apply(console, methodData);\n\t\t}\n\t}\n\tfunction buildMessageArgs(logData) {\n\t\tvar msgStr = '';\n\t\tvar msgObj = {};\n\t\t//TODO: Attach time stamp\n\t\t//Attach location information to the beginning of message\n\t\tif (_.isObject(logData)) {\n\t\t\tif (logLevel == 'debug') {\n\t\t\t\tif (_.has(logData, 'func')) {\n\t\t\t\t\tif (_.has(logData, 'obj')) {\n\t\t\t\t\t\t//Object and function provided\n\t\t\t\t\t\tmsgStr += `[${logData.obj}.${logData.func}()]\\n `;\n\t\t\t\t\t} else if (_.has(logData, 'file')) {\n\t\t\t\t\t\tmsgStr += `[${logData.file} > ${logData.func}()]\\n `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmsgStr += `[${logData.func}()]\\n `;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//Print each key and its value other than obj and func\n\t\t\t_.each(_.omit(_.keys(logData)), (key, ind, list) => {\n\t\t\t\tif (key != 'func' && key != 'obj') {\n\t\t\t\t\tif (key == 'description' || key == 'message') {\n\t\t\t\t\t\tmsgStr += logData[key];\n\t\t\t\t\t} else if (_.isString(logData[key])) {\n\t\t\t\t\t\t// msgStr += key + ': ' + logData[key] + ', ';\n\t\t\t\t\t\tmsgObj[key] = logData[key];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//Print objects differently\n\t\t\t\t\t\t// msgStr += key + ': ' + logData[key] + ', ';\n\t\t\t\t\t\tmsgObj[key] = logData[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tmsgStr += '\\n';\n\t\t} else if (_.isString(logData)) {\n\t\t\tmsgStr = logData;\n\t\t}\n\t\tvar msg = [msgStr, msgObj];\n\n\t\treturn msg;\n\t}\n\n\tclass Fireadmin {\n\t\t/* Constructor\n\t\t * @param {string} appName Name of application\n\t\t */\n\t\tconstructor(url, opts) {\n\t\t\tif (!url) {\n\t\t\t\tlogger.error({description: 'Application name requires to use Fireadmin.', func: 'constructor', obj: 'Fireadmin'});\n\t\t\t\tthrow new Error('Application name is required to use Fireadmin');\n\t\t\t} else {\n\t\t\t\tthis.ref = new Firebase(url);\n\t\t\t\tthis.fbUrl = url;\n\t\t\t\tthis.appName = AppNameFromUrl(url);\n\t\t\t}\n\t\t\tif (opts) {\n\t\t\t\tthis.options = opts;\n\t\t\t}\n\t\t}\n\t\tget auth() {\n\t\t\treturn this.ref.getAuth();\n\t\t}\n\t\tget isAuthorized() {\n\t\t\treturn !this.auth || this.auth === null;\n\t\t}\n\t\t/**\n\t  * This callback is displayed as part of the Requester class.\n\t  * @callback Fireadmin~errorCb\n\t  * @param {String} code\n\t  * @param {String} message\n\t  */\n\t  /**\n\t   * Creates an object provided the name of the list the object will go into and the object itthis.\n\t   * The object is created with a createdAt parameter that is a server timestamp from Firebase.\n\t   * If a user is currently signed in, the object will contain the author's `$uid` under the author parameter.\n\t   * @param {String} listName - The name of the list the object will be put into. `Required`\n\t   * @param {Object} objectData - Data you wish to be contained within new object. `Required`\n\t   * @param {Function} onSuccess - Function that runs when your object has been created successfully and returns newly created object. `Optional`\n\t   * @param {Function} onError - Function that runs if there is an error creating the object. `Optional`\n\t   * @example\n\t   * //creates new message object in message list\n\t   * fa.createObject('messages', {title:Example, content:'Cool Message'}, ).then(function(newMsg){\n\t   *  logger.log('New Message created successfuly:', newMsg);\n\t   * }, function(err){\n\t   *  logger.error('Error creating new message:', err);\n\t   * });\n\t   */\n\t\tcreateObject(listName, obj) {\n\t    var auth = this.ref.getAuth();\n\t    if (auth) {\n\t      obj.author = auth.uid;\n\t    }\n\t    obj.createdAt = Date.now();\n\t    return this.ref.child(listName).push(obj, (err) => {\n\t      if (!err) {\n\t\t\t\t\treturn Promise.resolve(obj);\n\t      } else {\n\t\t\t\t\treturn Promise.reject(err);\n\t      }\n\t    });\n\t  }\n\t\t/**\n\t\t * Gets list of objects created by the currently logged in User.\n\t\t * @param {String | Array} listPath -  The name or path of the list the objects will be grabbed from. `Required`\n\t\t * @param {String} Uid - The Uid of the user that created objects. `Required`\n\t\t * @param {Function} onSuccess - Function that runs when the list has been retrieved successfully. `Optional`\n\t\t * @param {Fireadmin~errorCb} onError -  Function that runs if there is an error. `Optional`\n\t\t * @example\n\t\t * // Signin User with email and password\n\t\t * var uid = 'simplelogin:1';\n\t\t * fb.listByUid('messages', uid, function(messageList){\n\t\t *  logger.log('List of messages by ' + uid + ' : ', messageList);\n\t\t * }, function(err){\n\t\t *  logger.error('Error getting message list:', err);\n\t\t * });\n\t\t */\n\t\tlistByCurrentUser(listName) {\n\t\t\tif (!listName) {\n\t\t\t\treturn Promise.reject({message: 'Listname required to list objects.'});\n\t\t\t}\n\t    if (this.isAuthorized) {\n\t      let authorObjQuery = this.ref.child(listName).orderByChild('author').equalTo(auth.uid);\n\t\t\t\treturn authorObjQuery.on('value', (listSnap) => {\n\t\t\t\t\treturn Promise.resolve(listSnap.val());\n\t      }, (err) => {\n\t\t\t\t\treturn Promise.reject(err);\n\t      });\n\t    } else {\n\t      var error = {code: 'INVALID_AUTH', message: 'listByCurrentUser cannot load list without current user'};\n\t      logger.error(error.message);\n\t\t\t\treturn Promise.reject(error);\n\t    }\n\t\t}\n\t\t/**\n\t\t * Gets list of objects created by the currently logged in User.\n\t\t * @param {String | Array} listPath -  The name or path of the list the objects will be grabbed from. `Required`\n\t\t * @param {String} Uid - The Uid of the user that created objects. `Required`\n\t\t * @param {Function} onSuccess - Function that runs when the list has been retrieved successfully. `Optional`\n\t\t * @param {Fireadmin~errorCb} onError -  Function that runs if there is an error. `Optional`\n\t\t * @example\n\t\t * // Signin User with email and password\n\t\t * var uid = 'simplelogin:1';\n\t\t * fb.listByUid('messages', uid, function(messageList){\n\t\t *  logger.log('List of messages by ' + uid + ' : ', messageList);\n\t\t * }, function(err){\n\t\t *  logger.error('Error getting message list:', err);\n\t\t * });\n\t\t */\n\t\tlistByUid(uid) {\n\t\t\treturn this.fbRef(listPath).orderByChild('author').equalTo(uid).on('value', (listSnap) => {\n\t\t\t\treturn Promise.resolve(listSnap.val());\n\t    }, (err) => {\n\t\t\t\treturn Promise.reject(err);\n\t    });\n\t\t}\n\t\t/**\n\t   * Get total user count\n\t   * @param {Function} onSuccess - Function that returns total user count. `Optional`\n\t   * @param {Fireadmin~errorCb} onError - Function that runs if there is an error. `Optional`\n\t   * @example\n\t   * fa.getUserCount('users', function(count){\n\t   *  logger.log('There are is a total of ' + count + ' users.');\n\t   * });\n\t   */\n\t  getUserCount() {\n\t    return this.ref.child('users').on('value', (usersListSnap) => {\n\t\t\t\treturn Promise.resolve(usersListSnap.numChildren());\n\t    }, (err) => {\n\t\t\t\tlogger.error({description: 'Error getting user count.', func: 'getUserCount', obj: 'Fireadmin'});\n\t\t\t\treturn Promise.reject(err);\n\t    });\n\t  }\n\t  /** Get the number of users that are currently online.\n\t   * @memberOf Fireadmin#\n\t   * @param {Function} onSuccess - Function that returns number of users currently online. `Optional`\n\t   * @param {Fireadmin~errorCb} onError - Function that runs if there is an error. `Optional`\n\t   * @example\n\t   * fa.getOnlineUserCount(function(count){\n\t   *   logger.log('There are ' + count + ' users currently online.');\n\t   * });\n\t   *\n\t   */\n\t  getOnlineUserCount() {\n\t    return this.ref.child('presence').on('value', (onlineUserSnap) => {\n\t      logger.log('There are currently' + onlineUserSnap.numChildren() + ' users online.');\n\t\t\t\treturn Promise.resolve(onlineUserSnap.numChildren());\n\t    }, (err) => {\n\t\t\t\treturn Promise.reject(err);\n\t    });\n\t  }\n\t  /**\n\t   * Get the number of sessions between two times\n\t   * @param {Number} startTime - The time at which to start the between period (in UTC ms). `Required`\n\t   * @param {Number} endTime - The time at which to start the between period (in UTC ms). `Required`\n\t   * @param {Function} onSuccess - Function that runs on completion of gathering list count. `Optional`\n\t   * @param {Fireadmin~errorCb} onError - Function that runs if there is an error. `Optional`\n\t   * @example\n\t   * //String list name\n\t   * fa.getObjectCount('users', function(count){\n\t   *  logger.log('There are ' + count + ' users');\n\t   * });\n\t   */\n\t  sessionsBetween(time1, time2) {\n\t    logger.log({description: 'Sessions between called.', startTime: time1, endTime: time2, func: 'sessionsBetween', obj: 'Fireadmin'});\n\t    return this.ref.child('sessions').orderByChild('ended').startAt(time1).endAt(time2).on('value', (sessionsSnap) => {\n\t\t\t\treturn Promise.resolve(sessionsSnap.numChildren());\n\t    }, (err) => {\n\t\t\t\tlogger.error({description: 'Error getting sessions between specified times.', error: err, func: 'sessionsBetween', obj: 'Fireadmin'});\n\t\t\t\treturn Promise.reject({message: 'Error getting sessions.'});\n\t    });\n\t  }\n\t  /**\n\t   * Get the number of sessions since a specific time\n\t   * @param {String} time - The UTC time to calculate from.\n\t   * @param {Function} onSuccess - Function that runs on completion of gathering list count. `Optional`\n\t   * @param {Fireadmin~errorCb} onError - Function that runs if there is an error. `Optional`\n\t   * @example\n\t   * var dt = new Date(); //Create a new Data object\n\t   * dt.setMonth(dt.getMonth()-1); //Set date back a month\n\t   * var monthAgo = dt.getTime(); //Convert to UTC time\n\t   * //Get number of sessions since a month ago\n\t   * fa.sessionsSince(monthAgo, function(count){\n\t   *  logger.log('There are ' + count + ' sessions in the past month');\n\t   * });\n\t   */\n\t  sessionsSince(time) {\n\t    return this.ref.child('sessions').orderByChild('ended').startAt(time).endAt(Date.now()).on('value', (sessionsSnap) => {\n\t\t\t\treturn Promise.resolve(sessionsSnap.numChildren());\n\t    }, (err) => {\n\t\t\t\tlogger.error({description: 'Error getting sessions between specified times.', error: err, func: 'sessionsSince', obj: 'Fireadmin'});\n\t\t\t\treturn Promise.reject(err);\n\t    });\n\t  }\n\t  /**\n\t   * Get count of objects in a given path or list\n\t   * @param {Function} onSuccess - Function that runs on completion of gathering average session length. `Optional`\n\t   * @param {Fireadmin~errorCb} onError - Function that runs if there is an error. `Optional`\n\t   * @example\n\t   * //Get the average session length\n\t   * fa.averageSessionLength(function(count){\n\t   *  logger.log('The average session length is ~' + count ' mins');\n\t   * });\n\t   */\n\t  averageSessionLength() {\n\t    return this.ref.child('sessions').on('value', (sessionsSnap) => {\n\t      var totalLength = null;\n\t      var sessionCount = sessionsSnap.numChildren();\n\t      sessionsSnap.forEach((sessionSnap) => {\n\t        var session = sessionSnap.val();\n\t        if (session.hasOwnProperty('ended') && session.hasOwnProperty('began')) {\n\t          //Gather length of session\n\t          // Convert difference in ms to minutes\n\t\t\t\t\t\tvar conversion = (session.ended - session.began) / (1000 * 60) ;\n\t          totalLength = totalLength + conversion;\n\t          logger.log('total length is now:', totalLength);\n\t        } else {\n\t          logger.log('removing unfinished session:', sessionSnap.val());\n\t          sessionCount--;\n\t          logger.log('session count:', sessionCount);\n\t        }\n\t      });\n\t      logger.log('totalLength:', totalLength);\n\t      var average = Math.floor(totalLength / sessionCount);\n\t      logger.log('average in minutes:', average);\n\t\t\t\treturn Promise.resolve(average);\n\t    }, (err) => {\n\t\t\t\treturn Promise.reject(err);\n\t    });\n\t  }\n\t  removeUserSessions(uid) {\n\t    return this.ref.child('sessions').orderByChild('user').equalTo(uid).on('value', (sessionsSnap) => {\n\t     var sessionCount = sessionsSnap.numChildren();\n\t      sessionsSnap.forEach((session) => {\n\t        session.ref().remove();\n\t      });\n\t      logger.log(sessionCount + ' Sessions sucessfully removed');\n\t\t\t\treturn Promise.resolve();\n\t    }, (err) => {\n\t\t\t\treturn Promise.reject(err);\n\t    });\n\t  }\n\t  customAuthToken(img) {\n\t    //Send file to server\n\t    var fa = this;\n\t    var reqData = {appName: fa.appName};\n\t    apiRequest('auth', reqData, (res) => {\n\t      if (res.hasOwnProperty('token')) {\n\t        logger.log('auth request response:', res);\n\t\t\t\t\treturn Promise.resolve(res);\n\t      } else {\n\t\t\t\t\treturn Promise.reject({code: 'SERVER_ERROR'});\n\t      }\n\t    }, (err) => {\n\t\t\t\treturn Promise.reject(err);\n\t    });\n\t  }\n\t  /** Modified version of Firebase's authWithPassword that handles presence\n\t   * @memberOf Fireadmin#\n\t   * @param {Object | String} loginData - Login data object or string for 3rd Party Signup (Twitter, Github, Google) `Required`\n\t   * @param {Object} loginData.email - Email of new user (`Required` only for email signup).\n\t   * @param {Function} onSuccess Function that runs when the user is successfully authenticated with presence enabled. `Optional`\n\t   * @param {Fireadmin~errorCb} onError Function that runs if there is an error. `Optional`\n\t   * @example\n\t   * // Signin User with email and password\n\t   * fb.userSignup({email:test@test.com, password:'testtest'}, function(auth){\n\t   *  logger.log('Login Successful for user:', auth.uid);\n\t   * }, function(err){\n\t   *  logger.error('Error logging in:', err);\n\t   * });\n\t   */\n\t  userSignup(signupData) {\n\t    if (typeof signupData === 'object' && signupData.hasOwnProperty('email')) {\n\t      //Email signup\n\t      if (!signupData.hasOwnProperty('password') && signupData.password.length <= 8) {\n\t        return handleCb(errorCb,{message: 'A valid Password is required to signup.'});\n\t      }\n\t      //Create new user in simple login\n\t      return this.createUser(signupData, (error) => {\n\t        if (error === null) {\n\t          logger.log('[emailSignup] User created successfully. Logging in as new user...');\n\t            // Login with new account\n\t            this.emailAuth(signupData, (authData) => {\n\t              //Create new user profile\n\t              return createUserProfile(authData, this.ref, (userAccount) => {\n\t\t\t\t\t\t\t\t\treturn Promise.resolve(userAccount);\n\t              }, (err) => {\n\t                //Error creating profile\n\t\t\t\t\t\t\t\t\treturn Promise.reject(err);\n\t              });\n\t            }, (err) => {\n\t              //Error authing with email\n\t\t\t\t\t\t\t\treturn Promise.reject(err);\n\t            });\n\t        } else {\n\t          //Error creating new User\n\t          logger.error('[emailSignup] Error creating user:', error.message);\n\t\t\t\t\t\treturn Promise.reject(error);\n\t        }\n\t      });\n\n\t    } else if (signupData.hasOwnProperty('type') && signupData.type == 'username') {\n\t      //[TODO] User signup with with custom auth token with username as uid\n\t      //Username signup\n\t      //request a signup with username as uid\n\t      apiRequest('signup', signupData, (res) => {\n\t        logger.log('request for token successful:', res);\n\t        return this.authWithCustomToken(res.token, (err, authData) => {\n\t          if (err) {\n\t\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t\t}\n\t          return createUserProfile(authData, this.ref, (userAccount) => {\n\t\t\t\t\t\t\treturn Promise.resolve(userAccount);\n\t          }, (err) => {\n\t            //Error creating profile\n\t\t\t\t\t\t\treturn Promise.reject(err);\n\t          });\n\t        });\n\t      }, (err) => {\n\t\t\t\t\treturn Promise.reject(err);\n\t      });\n\t    } else if (typeof signupData == 'string' || signupData.hasOwnProperty('type')) {\n\t      //3rd Party Signup\n\t\t\t\tlet provider = typeof signupData === 'string' ? signupData : signupData.type;\n\t      // Auth using 3rd party OAuth\n\t      return this.authWithOAuthPopup(provider, (err, authData) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t\t}\n\t        //Create new profile with user data\n\t        return createUserProfile(authData, this.ref, (userAccount) => {\n\t\t\t\t\t\treturn Promise.resolve(userAccount);\n\t        }, (err) => {\n\t          //Error creating profile\n\t\t\t\t\t\treturn Promise.reject(err);\n\t        });\n\t      });\n\t    }\n\t  }\n\n\t  /** Modified version of Firebase's authWithPassword that handles presence\n\t   * @memberOf Fireadmin#\n\t   * @param {Object} loginData Login data of new user\n\t   * @param {Function} onSuccess Function that runs when the user is successfully authenticated with presence enabled. `Optional`\n\t   * @param {Fireadmin~errorCb} onError Function that runs if there is an error. `Optional`\n\t   * @example\n\t   * // Signin User with email and password\n\t   * fb.emailAuth({email:test@test.com, password:'testtest'}, function(auth){\n\t   *  logger.log('Login Successful for user:', auth.uid);\n\t   * }, function(err){\n\t   *  logger.error('Error logging in:', err);\n\t   * });\n\t   */\n\t  emailAuth(loginData) {\n\t    return this.ref.authWithPassword(loginData, (error, authData) => {\n\t      if (error === null) {\n\t        // user authenticated with Firebase\n\t        logger.log('User ID: ' + authData.uid + ', Provider: ' + authData.provider);\n\t        // Manage presence\n\t        this.setupPresence(authData.uid);\n\t        // [TODO] Check for account/Add account if it doesn't already exist\n\t\t\t\t\treturn Promise.resolve(authData);\n\t      } else {\n\t        logger.error('Error authenticating user:', error);\n\t\t\t\t\treturn Promise.reject(err);\n\t      }\n\t    });\n\t  }\n\t  /** Modified version of Firebase's authWithOAuthPopup function that handles presence\n\t   * @memberOf Fireadmin#\n\t   * @param {String} provider - Login data of new user. `Required`\n\t   * @param {Function} onSuccess - Function that runs when the user is successfully authenticated with presence enabled. `Optional`\n\t   * @param {Fireadmin~errorCb} onError - Function that runs if there is an error. `Optional`\n\t   * @example\n\t   * // Signin User with email and password\n\t   * fb.authWithOAuthPopup('google', function(auth){\n\t   *  logger.log('Login Successful for user:', auth.uid);\n\t   * }, function(err){\n\t   *  logger.error('Error logging in:', err);\n\t   * });\n\t   */\n\t  authWithOAuthPopup(provider) {\n\t    //[TODO] Check enabled login types\n\t    return this.ref.authWithOAuthPopup(provider,(error, authData) => {\n\t      if (error === null) {\n\t        // user authenticated with Firebase\n\t        logger.log({description: 'Auth popup responded.', authData: authData, id: authData.uid, provider: authData.provider, func: 'authWithOAuthPopup', obj: 'Fireadmin'});\n\t        // Manage presence\n\t        this.setupPresence(authData.uid);\n\t        // [TODO] Check for account/Add account if it doesn't already exist\n\t\t\t\t\treturn Promise.resolve(authData);\n\t      } else {\n\t        logger.error('Error authenticating user:', error);\n\t\t\t\t\treturn Promise.reject(error);\n\t      }\n\t    });\n\t  }\n\t  newUserFromAnonyomous() {\n\n\t  }\n\t  /** Log in with Github through OAuth\n\t   * @memberOf Fireadmin#\n\t   * @param {Function} onSuccess - Function that runs when the user is successfully authenticated with presence enabled. `Optional`\n\t   * @param {Fireadmin~errorCb} onError - Function that runs if there is an error. `Optional`\n\t   * @example\n\t   * // Signin User with email and password\n\t   * fb.githubAuth(function(auth){\n\t   *  logger.log('Login Successful for user:', auth.uid);\n\t   * }, function(err){\n\t   *  logger.error('Error logging in:', err);\n\t   * });\n\t   */\n\t  githubAuth() {\n\t    return this.authWithOAuthPopup('github');\n\t  }\n\t  /** Modified version of Firebase's authWithPassword that handles presence\n\t   * @memberOf Fireadmin#\n\t   * @param {Function} onSuccess Function that runs when the user is successfully authenticated with presence enabled. `Optional`\n\t   * @param {Fireadmin~errorCb} onError Function that runs if there is an error. `Optional`\n\t   * @example\n\t   * // Signin User with email and password\n\t   * fb.githubAuth(function(auth){\n\t   *  logger.log('Login Successful for user:', auth.uid);\n\t   * }, function(err){\n\t   *  logger.error('Error logging in:', err);\n\t   * });\n\t   */\n\t  googleAuth() {\n\t    return this.authWithOAuthPopup('google');\n\t  }\n\t  /** Modified version of Firebase's authWithPassword that handles presence\n\t   * @memberOf Fireadmin#\n\t   * @param {Function} onSuccess Function that runs when the user is successfully authenticated with presence enabled. `Optional`\n\t   * @param {Fireadmin~errorCb} onError Function that runs if there is an error. `Optional`\n\t   * @example\n\t   * // Signin User with email and password\n\t   * fb.githubAuth(function(auth){\n\t   *  logger.log('Login Successful for user:', auth.uid);\n\t   * }, function(err){\n\t   *  logger.error('Error logging in:', err);\n\t   * });\n\t   */\n\t  twitterAuth() {\n\t    return this.authWithOAuthPopup('twitter');\n\t  }\n\n\t  /** Get account for a user given their uid.\n\t   * @memberOf Fireadmin#\n\t   * @param {String} uid Unique Id for account.\n\t   * @param {Function} onSuccess Function that returns account info once it is loaded. `Optional`\n\t   * @param {Fireadmin~errorCb} onError Function that runs if there is an error. `Optional`\n\t   * @example\n\t   * // Get account for uid: simplelogin:1\n\t   * fa.accountByUid('simplelogin:1', function(account){\n\t   *   logger.log('Account for user with uid: ' + uid + ' is : ', account);\n\t   * }, function(err){\n\t   *    logger.error('Error getting account for ' + uid + ' : ', err);\n\t   * });\n\t   *\n\t   */\n\t  accountByUid(uid) {\n\t    return this.ref.child(uid).on('value', (accountSnap) => {\n\t      handleCb(successCb, accountSnap.val());\n\t    }, (err) => {\n\t      logger.error('Error getting account for ' + uid + ' : ', err);\n\t\t\t\treturn Promise.reject(err);\n\t    });\n\t  }\n\t  /** Get user account that is associated to a given email.\n\t   * @memberOf Fireadmin#\n\t   * @param {String} email - Email of account to retreive.\n\t   * @param {Fireadmin~accountByEmailCb} onSuccess - Function that returns account info once it is loaded. `Optional`\n\t   * @param {Fireadmin~errorCb} onError - Function that runs if there is an error. `Optional`\n\t   * @example\n\t   * fa.accountByEmail('test@test.com', function(account){\n\t   *   logger.log('Account loaded:' + account);\n\t   * }, function(err){\n\t   *  logger.error('Error getting account by email:', err);\n\t   * });\n\t   *\n\t   */\n\t  accountByEmail(email) {\n\t    if (email && typeof email == 'string') {\n\t      return this.ref.child('users').orderByChild('email').equalTo(email).on('value', (querySnapshot) => {\n\t        logger.log('accountByEmail returned:', querySnapshot.val());\n\t\t\t\t\treturn Promise.resolve(querySnapshot.val());\n\t      }, (err) => {\n\t        logger.error('Error getting account by email:', err);\n\t\t\t\t\treturn Promise.reject(err);\n\t      });\n\t    } else {\n\t\t\t\treturn Promise.reject({message: 'Email is required to get account.'});\n\t    }\n\t  }\n\t  /**\n\t   * Success callback for accountByEmail function that returns the account associated with a provided email.\n\t   * @callback Fireadmin~accountByEmailCb\n\t   * @param {Object} account Account associated with provided email.\n\t   * @param {String} account.email Email associated with account.\n\t   * @param {String} account.createdAt UTC Time when the account was created.\n\t   */\n\n\t  /** Start presence management for a specificed user uid. This function is used within Fireadmin login functions.\n\t   * @memberOf Fireadmin#\n\t   * @param {String} uid Unique Id for user that for which presence is being setup.\n\t   * @example\n\t   * fa.setupPresence('simplelogin:1');\n\t   *\n\t   */\n\t  setupPresence(uid) {\n\t    logger.log({description: 'setupPresence called', uid: uid, func: 'setupPresense', obj: 'Fireadmin'});\n\t    var amOnline = this.ref.child('.info/connected');\n\t    var onlineRef = this.ref.child('presence').child(uid);\n\t    var sessionsRef = this.ref.child('sessions');\n\t    var userRef = this.ref.child('users').child(uid);\n\t    var userSessionRef = this.ref.child('users').child(uid).child('sessions');\n\t    var pastSessionsRef = userSessionRef.child('past');\n\t    return amOnline.on('value', (snapShot) => {\n\t      if (snapShot.val()) {\n\t        //user is online\n\t        var onDisconnectRef = this.ref.onDisconnect();\n\t        // add session and set disconnect\n\t        var session = sessionsRef.push({began: Firebase.ServerValue.TIMESTAMP, user: uid});\n\t        var endedRef = session.child('ended');\n\t        endedRef.onDisconnect().set(Firebase.ServerValue.TIMESTAMP);\n\t        //add correct session id to user\n\t        // adding session id to current list under user's session\n\t        var currentSesh = userSessionRef.child('current').push(session.key());\n\t        // Remove session id from users current session folder\n\t        currentSesh.onDisconnect().remove();\n\t        // remove from presence list\n\t        onlineRef.set(true);\n\t        onlineRef.onDisconnect().remove();\n\t        // Add session id to past sessions on disconnect\n\t        // pastSessionsRef.onDisconnect().push(session.key());\n\t        // Do same on unAuth\n\t        this.onAuth((authData) => {\n\t          if (!authData) {\n\t            endedRef.set(Firebase.ServerValue.TIMESTAMP);\n\t            currentSesh.remove();\n\t            onlineRef.remove();\n\t          }\n\t        });\n\t      }\n\t    });\n\t  }\n\t  /** Get a firebase reference for a path in array | string form\n\t   *\n\t   * @memberOf Fireadmin#\n\t   * @param {String|Array} path relative path to the root folder in Firebase instance\n\t   * @returns A Firebase instance\n\t   * @example\n\t   * //Array as path\n\t   * var userRef = fa.fbRef(['users', uid]);\n\t   */\n\t  fbRef(path) {\n\t    var ref = this.ref;\n\t    var args = Array.prototype.slice.call(arguments);\n\t    if (args.length) {\n\t      //[TODO] Have this return a Fireadmin object\n\t      ref = ref.child(pathRef(args));\n\t    }\n\t    return ref;\n\t  }\n\t};\n\n\treturn Fireadmin;\n\n}));"],"sourceRoot":"/source/"}